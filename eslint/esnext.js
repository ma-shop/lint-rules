module.exports = {
  env: {
    es6: true,
  },
  parserOptions: {
    ecmaVersion: 7,
    ecmaFeatures: {
      arrowFunctions: true,
      binaryLiterals: true,
      blockBindings: true,
      classes: true,
      defaultParams: true,
      destructuring: true,
      forOf: true,
      generators: true,
      modules: true,
      objectLiteralComputedProperties: true,
      objectLiteralDuplicateProperties: true,
      objectLiteralShorthandMethods: true,
      objectLiteralShorthandProperties: true,
      octalLiterals: true,
      regexUFlag: true,
      regexYFlag: true,
      restParams: true,
      spread: true,
      superInFunctions: true,
      templateStrings: true,
      unicodeCodePointEscapes: true,
      globalReturn: true,
      experimentalObjectRestSpread: true,
    },
    sourceType: 'module',
  },
  extends: [ './base.js' ],
  parser: 'babel-eslint',
  rules: {
    'arrow-body-style': [ 'error', 'as-needed', { requireReturnForObjectLiteral: true } ],
    'arrow-parens': [ 'error', 'always' ],
    'arrow-spacing': 'error',
    'comma-dangle': [
      'error',
      {
        'arrays': 'always-multiline',
        'objects': 'always-multiline',
        'imports': 'always-multiline',
        'exports': 'always-multiline',
        'functions': 'always-multiline',
      },
    ],
    'generator-star-spacing': 'error',
    'no-class-assign': 'error',
    'no-const-assign': 'error',
    'no-dupe-class-members': 'error',
    'no-duplicate-imports': 'error',
    'no-new-symbol': 'error',
    'no-this-before-super': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'object-shorthand': [ 'error', 'always', { avoidExplicitReturnArrows: true } ],
    'prefer-arrow-callback': [ 'error', { allowUnboundThis: true, allowNamedFunctions: true } ],
    'prefer-destructuring': [ 'error', { array: true, object: true }, { enforceForRenamedProperties: false } ],
    'symbol-description': 'error',
    'no-await-in-loop': 'error',
    'prefer-const': [ 'error', { destructuring: 'all' } ],
    'no-return-await': 'error',
    'no-var': 'error',
    'prefer-rest-params': 'error',
    'require-await': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'require-yield': 'error',
    'rest-spread-spacing': [ 'error', 'never' ],
    'template-curly-spacing': [ 'error', 'never' ],
    'template-tag-spacing': [ 'error', 'never' ],
    'yield-star-spacing': [ 'error', 'before' ],
  },
};
